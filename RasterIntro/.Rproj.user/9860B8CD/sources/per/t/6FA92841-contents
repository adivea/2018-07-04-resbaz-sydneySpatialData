###   EXPLORATION OF RASTERS IN R

###   JUNE 2018 DATA CARPENTRY (USING PLOT NOT GGPLOT)

# Prerequisites
install.packages("rgdal")
install.packages("raster")
library(rgdal)
library(raster)

# Check your space
setwd("D:/Users/MQ20149304/Downloads/NEONDSAirborneRemoteSensing/NEON-DS-Airborne-Remote-Sensing/")
HARV_dsm <- raster("./HARV/DSM/HARV_dsmCrop.tif")  # sorry for the nomenclature
HARV_dsm

# Plot and explore raster

plot(HARV_dsm, main="Hello raster")
crs(HARV_dsm)
res(HARV_dsm)
extent(HARV_dsm)

mycrs <- crs(HARV_dsm)
mycrs

# finding no data and bad values in a histogram

hist(HARV_dsm, main='Distribution of DEM values', xlab="DSM Elevation value (m)", 
     ylab = "Frequency", col="wheat")

ncell(HARV_dsm)


# histogram with all cells


hist(HARV_dsm, 
     maxpixels = ncell(HARV_dsm),
     main='Distribution of DEM values', xlab="DSM Elevation value (m)", 
     ylab = "Frequency", col="wheat3")

nlayers(HARV_dsm)


GDALinfo("./HARV/DSM/HARV_dsmCrop.tif")



### 02 PLOTTING RASTERS

DSMhist <- hist(HARV_dsm,
                breaks = 6,
                main = "Histogram Digital Surface Model\n NEON Harvard Forest Field Site",
                col = "wheat3",  # changes bin color
                xlab = "Elevation (m)")  # label the x-axis
DSMhist$breaks
DSMhist$counts


# plot using breaks.

mycol <- terrain.colors(6)

plot(HARV_dsm,
     breaks = c(300, 320, 340, 360, 380, 400, 420),
     col = mycol,
     main = "Digital Surface Model (DSM)\n NEON Harvard Forest Field Site",
     xlab = "UTM Westing coordinate",
     ylab = "UTM Northing coordinate")
     
# plot hillshade
HARV_dsm_hill <- raster("HARV/DSM/HARV_DSMhill.tif")
plot(HARV_dsm_hill, 
     col = grey(1:100/100), #create a color ramp of grey
     legend =FALSE,
     main = "hillshade",
     axes = FALSE)

plot(HARV_dsm,
     col = mycol,
     alpha = 0.4,
     add = T,
     legend = F)

# CREATE DSM MAPS
# import DSM
SJER <- raster("SJER/DSM/SJER_dsmCrop.tif")
# import DSM hillshade
SJER_hill <- raster("SJER/DSM/SJER_dsmHill.tif")

plot(SJER_hill, 
     col = grey(1:100/100), #create a color ramp of grey
     legend =FALSE,
     main = "SJER with hillshade",
     axes = FALSE)

plot(SJER, 
     col = terrain.colors(100),
     alpha = 0.7,
     add = TRUE,
     legend = FALSE)
    


###  03 PROJECT RASTER
DTM <- raster("HARV/DTM/HARV_dtmCrop.tif")

plot(DTM, 
     col = terrain.colors(10),
     alpha = 1,
     legend = F,
     main = "Digital Terrain Model\n NEON Harvard Forest Field Site")
crs(DTM)

DTM_hill <- raster("HARV/DTM/HARV_DTMhill_WGS84.tif")
crs(DTM_hill)
plot(DTM_hill)

# confirm the projectRaster generated a UTM18 crs with similar extent (in meters not degrees)
DTM_hill18UTM <- projectRaster(DTM_hill, crs = crs(DTM))
crs(DTM_hill18UTM)
extent(DTM_hill18UTM)
extent(DTM)

# resolution needs to match if you are plotting one over another
res(DTM_hill18UTM)
res(DTM)

# reproject wiht resolution adjustment
DTM_hill18UTM <- projectRaster(DTM_hill, crs = crs(DTM), res=1)


plot(DTM_hill18UTM, 
     col = grey(1:100/100),
     alpha = 1, 
     legend = F,
     main = "DTM with hillshade \n NEON Harvard Forest Field Site")
     

plot(DTM, 
     col = terrain.colors(10),
     alpha = 0.45,
     legend = FALSE,
     add = TRUE)


###  04 RASTER CALCULATIONS 

### Explore the DTMs, 
# Do they share crs, extent and res?

GDALinfo("HARV/DTM/HARV_dtmCrop.tif")
GDALinfo("HARV/DSM/HARV_dsmCrop.tif")

DTM <- raster("HARV/DTM/HARV_dtmCrop.tif")
DSM <- raster("HARV/DSM/HARV_dsmCrop.tif")
plot(DTM, main = "digital terrain model")
plot(DSM, main = "digital surface model")


## calculating canopy model
CMH <- DSM-DTM
plot(CMH, main = "digital canopy height model")
hist(CMH, 
     col = "green")
CMH
maxValue(CMH)

hist(CMH, 
     breaks = 6,
     col = "springgreen")

plot(CMH, 
     breaks = c(0,10,20,30),
     main = "Canopy height",
     col= terrain.colors(4), 
     axes = FALSE)

### OVERLAY 

CMHovHarv <- overlay(DSM,DTM,
                     fun=function(r1,r2){return(r1-r2)})
plot(CMHovHarv)
CMHovHarv
CMH - CMHovHarv

# Export canopy model to a new raster
writeRaster(CMHovHarv, "./cmhHarv.tiff",
            format="GTiff",
            overwrite = TRUE,
            NAflag= -9999)



###   05 MULTIBAND RASTER OPERATIONS

# import via stack(), plotRGB() functions

getwd()
RGB_band1_HARV <-
  raster("./HARV/RGB_Imagery/HARV_RGB_Ortho.tif")
RGB_band1_HARV
nbands(RGB_band1_HARV)

greyscale_colors <- gray.colors(100, start = 0.0, #how black (0) to go
                                end = 1.0,  #how white (1) to go
                                gamma = 2.2, # correction btw human eye and camera
                                alpha = NULL)  #NULL colors are not transparent
plot(RGB_band1_HARV, 
     col = greyscale_colors,
     axes = F,
     main = "RGB HARV_dsmry - Band 1-Red")

minValue(RGB_band1_HARV)
maxValue(RGB_band1_HARV)

#Band 2
RGB_band2_HARV <-
  raster("./HARV/RGB_Imagery/HARV_RGB_Ortho.tif", band = 2)
plot(RGB_band2_HARV, 
     col = greyscale_colors,
     axes = F,
     main = "RGB HARV_dsmry - Band 2-Green")


# Import all via stack()

RGB_stack_HARV <- stack("./HARV/RGB_Imagery/HARV_RGB_Ortho.tif")
RGB_stack_HARV
RGB_stack_HARV@layers
hist(RGB_stack_HARV[[3]])
hist(RGB_stack_HARV$HARV_RGB_Ortho.2)

# plot all histograms
hist(RGB_stack_HARV, 
     maxpixels = ncell(RGB_stack_HARV))

plot(RGB_stack_HARV, 
     col = greyscale_colors)
par(mfrow = c(1,1))

# plot all rasters (grid view)
plot(RGB_stack_HARV[[2]],
    col = greyscale_colors,
    main = "Band 2")

# plot all layers in one raster on top of each other
plotRGB(RGB_stack_HARV, 
        r=1, g=2, b=3) 
        #stretch = "hist")  # is unnecessary